import{open as T}from"node:fs/promises";var p=process.cwd(),d={plugins:{},rules:{},files:[],ignores:[],languageOptions:{ecmaVersion:"latest",sourceType:"module",globals:{},parser:{}},linterOptions:{},processor:"",settings:{}};var v={arrowParens:"arrow-parens",bracketSpacing:"block-spacing",endOfLine:"linebreak-style",quoteProps:"quote-props",semi:"semi",singleQuote:"quotes",trailingComma:"comma-dangle"},A=["block-spacing","comma-dangle","quotes","quote-props"],q={printWidth:"code",tabWidth:"tabWidth"},G=["printWidth","tabWidth"],F=["avoid","false","none","preserve"],_=["plugins","bracketSameLine","parser","editorconfig","embeddedLanguageFormatting","experimentalTernaries","jsxBracketSameLine","jsxSingleQuote","singleAttributePerLine","useTabs","vueIndentScriptAndStyle","htmlWhitespaceSensitivity","proseWrap","insertPragma","requirePragma","filepath","rangeStart","rangeEnd"],k="@stylistic/js",W="@stylistic/ts",R=`${k}/max-len`;function M(e,t,n){let r=e[R];r||(r=e[R]=[2,{}]),r[1][q[t]]=n}function V(e,t,n){typeof n=="boolean"&&(n=`${n}`);let r=F.includes(n),o=v[t],i=A.includes(o)?W:k,s=0;switch(o){case"block-spacing":s=[2,r?"never":"always"],e[`${i}/object-curly-spacing`]=s;break;case"arrow-parens":case"quote-props":s=r?0:[2,n];break;case"semi":s=[2,r?"never":"always"];break;case"quotes":s=[2,r?"double":"single",{avoidEscape:!0}];break;case"comma-dangle":r?s=[2,"never"]:s=[2,n==="all"?"always":"only-multiline"];break;case"linebreak-style":s=[2,n==="lf"?"unix":"windows"];break;default:throw new Error(`Unknown prettier option ${t}.`)}e[`${i}/${o}`]=s}async function y(){let e,t={};try{e=await T(`${p}/.prettierrc`,"r")}catch{return t}let n=JSON.parse((await e.readFile()).toString());for(let r of Object.keys(n))_.includes(r)||(G.includes(r)?M(t,r,n[r]):V(t,r,n[r]));return await e.close(),t}import{fdir as H}from"fdir";async function x(){let t=await new H().withFullPaths().withMaxDepth(1).crawl(p).withPromise(),n=t.length,r=[],o;for(let i=0;i<n;i++)o=t[i],o.includes("tsconfig")&&o.includes("json")&&r.push(o);return r}import{open as B}from"node:fs/promises";async function b(){let e,t=[];try{e=await B(`${p}/.gitignore`,"r")}catch{return[...new Set(t)]}for await(let n of e.readLines())!n.length||n[0]==="#"||(n[0]==="*"&&n[1]==="."?t.push(n,`**/${n}`):t.push(n,n[0]==="!"||n[0]==="/"?`${n}/**`:`**/${n}/**`));return await e.close(),[...new Set(t)]}function h(...e){return Object.assign({},...e)}function m(e,t){return Array.prototype.push.apply(e,t),e}var ce=["**/node_modules","**/dist","**/build","**/bin","**/package-lock.json","**/yarn.lock","**/pnpm-lock.yaml","**/bun.lockb","**/output","**/coverage","**/temp","**/.temp","**/tmp","**/.tmp","**/.history","**/.vitepress/cache","**/.nuxt","**/.next","**/.vercel","**/.changeset","**/.idea","**/.vscode","**/.cache","**/.env","**/.output","**/.vite-inspect","**/.yarn","**/CHANGELOG*.md","**/*.min.*","**/LICENSE*","**/__snapshots__","**/*.d.ts"],f="?([cm])[jt]s?(x)",pe="**/*.{c,le,sc,sa}ss",fe=`**/*${f}`,ue=[`**/__tests__/**/*.${f}`,`**/*.spec.${f}`,`**/*.test.${f}`,`**/*.bench.${f}`,`**/*.benchmark.${f}`];function L(e,t){let n=t.length;if(!n||!e.length)return e.slice();let r;for(let o=0;o<n;o++)if(r=e.indexOf(t[o]),r>-1&&e.splice(r,1),!e.length)return[];return e.slice()}var D=["brace-style","no-extra-parens","object-curly-spacing","quote-props"],ye=["array-bracket-newline","array-bracket-spacing","array-element-newline","max-attributes-per-line","singleline-html-element-content-newline"],xe=[...D,"arrow-parens","indent","semi","quotes","lines-around-comment","padding-line-between-statements","space-before-function-paren"],be=["class-methods-use-this","consistent-return","dot-notation","func-call-spacing","no-array-constructor","no-dupe-class-members","no-loss-of-precision","no-redeclare","no-throw-literal","no-unused-vars","no-unused-expressions","no-use-before-define","no-useless-constructor","require-await"],U=["comma-spacing","key-spacing","keyword-spacing","lines-between-class-members","no-extra-semi","space-before-blocks","space-infix-ops"],he=[...L(U,["lines-between-class-members","no-extra-semi","space-before-blocks"]),"block-spacing","func-call-spacing"],Le=["arrow-spacing","eol-last","no-trailing-spaces","space-in-parens"],we=["jsx-closing-bracket-location","jsx-closing-tag-location","jsx-equals-spacing","jsx-indent","jsx-indent-props","jsx-no-multi-spaces","jsx-self-closing-comp","jsx-tag-spacing","jsx-wrap-multilines"];function w(e){return!!e.configs.recommended}function S(e){let t=Object.keys(e),n=t.length,r={...d},o,i;for(let s=0;s<n;s++)o=t[s],i=e[o],r.plugins[o]=i,w(i)&&(r.rules=Object.assign(r.rules,i.configs.recommended.rules));return r}function u(e,t){return e==="eslint"?t:`${e}/${t}`}function j(e,t){let n=e.length,r=t.length,o={},i,s;for(let l=0;l<r;l++)for(i=t[l],s=0;s<n;s++)o[u(i,e[s])]=0;return o}function C(...e){let t=Object.assign({},d);if(console.log(t),!e.length)return t}function $(e){let t=new Map,n=e.length,r=`merged-processor:${e[0].meta?.name??"unknown"}`;for(let o=1;o<n;o++)r=`${r}+${e[o].meta?.name??"unknown"}`;return{meta:{name:r},supportsAutofix:!0,preprocess(o,i){let s=new Array(n),l=[];t.set(i,s);let a;for(let c=0;c<n;c++)a=e[c].preprocess?.(o,i)??[],s[c]=a.length,m(l,a);return l},postprocess(o,i){let s=t.get(i),l=[];t.delete(i);let a=0,c;for(let g=0;g<n;g++)c=o.slice(a,a+s[g]),a+=s[g],m(l,e[g].postprocess?.(c,i)??[]);return l}}}function P(e){return Object.hasOwn(e,"rules")||Object.hasOwn(e,"plugins")}function E(...e){let t=e.length,n=new Array(t),r;for(let o=t-1;o>=0;o--)r=e[o],n[o]=P(r)?r.rules:r;return h(...n)}function O(e,t,n){let r=e.length,o=t.length,i=n.length,s={},l,a;for(let c=0;c<r;c++){for(l=e[c],a=0;a<o;a++)s[u(t[a],l)]=0;for(a=0;a<i;a++)s[u(n[a],l)]=2}return s}var I={configs:["shiny","format","test"],prettier:!0,gitignore:!0,eslintignore:!0};async function N(e){let t=Object.assign({},I,e),[n,r,o]=await Promise.all([y(t),b(t),x()]),i=await getConfigs(t)}export{Le as DeprecatedStyleList,d as EmptyProfileConfig,U as EsStyleReplaceList,be as EsTsReplaceList,ce as ExcludeGlobs,f as ExtensionGlob,xe as GeneralBanList,we as JsxStyleReplaceList,fe as SrcGlob,pe as StyleGlob,he as StyleVueReplaceList,ue as TestGlobs,D as VueBanList,ye as VueStyleBanList,S as apply,y as applyPrettier,j as ban,p as cwd,N as default,x as findTSConfigs,h as merge,m as mergeArr,C as mergeConfig,$ as mergeProcessors,E as mergeRules,b as parseGitignore,O as replace};
