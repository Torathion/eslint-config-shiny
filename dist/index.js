import{open as v}from"node:fs/promises";var p=process.cwd();var T={arrowParens:"arrow-parens",bracketSpacing:"block-spacing",endOfLine:"linebreak-style",quoteProps:"quote-props",semi:"semi",singleQuote:"quotes",trailingComma:"comma-dangle"},A=["block-spacing","comma-dangle","quotes","quote-props"],q={printWidth:"code",tabWidth:"tabWidth"},G=["printWidth","tabWidth"],E=["avoid","false","none","preserve"],F=["plugins","bracketSameLine","parser","editorconfig","embeddedLanguageFormatting","experimentalTernaries","jsxBracketSameLine","jsxSingleQuote","singleAttributePerLine","useTabs","vueIndentScriptAndStyle","htmlWhitespaceSensitivity","proseWrap","insertPragma","requirePragma","filepath","rangeStart","rangeEnd"],P="@stylistic/js",_="@stylistic/ts",k=`${P}/max-len`;function W(e,n,t){let r=e[k];r||(r=e[k]=[2,{}]),r[1][q[n]]=t}function M(e,n,t){typeof t=="boolean"&&(t=`${t}`);let r=E.includes(t),s=T[n],i=A.includes(s)?_:P,o=0;switch(s){case"block-spacing":o=[2,r?"never":"always"],e[`${i}/object-curly-spacing`]=o;break;case"arrow-parens":case"quote-props":o=r?0:[2,t];break;case"semi":o=[2,r?"never":"always"];break;case"quotes":o=[2,r?"double":"single",{avoidEscape:!0}];break;case"comma-dangle":r?o=[2,"never"]:o=[2,t==="all"?"always":"only-multiline"];break;case"linebreak-style":o=[2,t==="lf"?"unix":"windows"];break;default:throw new Error(`Unknown prettier option ${n}.`)}e[`${i}/${s}`]=o}async function d(){let e,n={};try{e=await v(`${p}/.prettierrc`,"r")}catch{return n}let t=JSON.parse((await e.readFile()).toString());for(let r of Object.keys(t))F.includes(r)||(G.includes(r)?W(n,r,t[r]):M(n,r,t[r]));return await e.close(),n}import{fdir as V}from"fdir";async function x(){let n=await new V().withFullPaths().withMaxDepth(1).crawl(p).withPromise(),t=n.length,r=[],s;for(let i=0;i<t;i++)s=n[i],s.includes("tsconfig")&&s.includes("json")&&r.push(s);return r}import{open as H}from"node:fs/promises";async function b(){let e,n=[];try{e=await H(`${p}/.gitignore`,"r")}catch{return[...new Set(n)]}for await(let t of e.readLines())!t.length||t[0]==="#"||(t[0]==="*"&&t[1]==="."?n.push(t,`**/${t}`):n.push(t,t[0]==="!"||t[0]==="/"?`${t}/**`:`**/${t}/**`));return await e.close(),[...new Set(n)]}function y(...e){return Object.assign({},...e)}function m(e,n){return Array.prototype.push.apply(e,n),e}var le=["**/node_modules","**/dist","**/build","**/bin","**/package-lock.json","**/yarn.lock","**/pnpm-lock.yaml","**/bun.lockb","**/output","**/coverage","**/temp","**/.temp","**/tmp","**/.tmp","**/.history","**/.vitepress/cache","**/.nuxt","**/.next","**/.vercel","**/.changeset","**/.idea","**/.vscode","**/.cache","**/.env","**/.output","**/.vite-inspect","**/.yarn","**/CHANGELOG*.md","**/*.min.*","**/LICENSE*","**/__snapshots__","**/*.d.ts"],u="?([cm])[jt]s?(x)",ce="**/*.{c,le,sc,sa}ss",pe=`**/*${u}`,ue=[`**/__tests__/**/*.${u}`,`**/*.spec.${u}`,`**/*.test.${u}`,`**/*.bench.${u}`,`**/*.benchmark.${u}`];function h(e,n){let t=n.length;if(!t||!e.length)return e.slice();let r;for(let s=0;s<t;s++)if(r=e.indexOf(n[s]),r>-1&&e.splice(r,1),!e.length)return[];return e.slice()}var B=["brace-style","no-extra-parens","object-curly-spacing","quote-props"],de=["array-bracket-newline","array-bracket-spacing","array-element-newline","max-attributes-per-line","singleline-html-element-content-newline"],xe=[...B,"arrow-parens","indent","semi","quotes","lines-around-comment","padding-line-between-statements","space-before-function-paren"],be=["class-methods-use-this","consistent-return","dot-notation","func-call-spacing","no-array-constructor","no-dupe-class-members","no-loss-of-precision","no-redeclare","no-throw-literal","no-unused-vars","no-unused-expressions","no-use-before-define","no-useless-constructor","require-await"],D=["comma-spacing","key-spacing","keyword-spacing","lines-between-class-members","no-extra-semi","space-before-blocks","space-infix-ops"],ye=[...h(D,["lines-between-class-members","no-extra-semi","space-before-blocks"]),"block-spacing","func-call-spacing"],he=["arrow-spacing","eol-last","no-trailing-spaces","space-in-parens"],we=["jsx-closing-bracket-location","jsx-closing-tag-location","jsx-equals-spacing","jsx-indent","jsx-indent-props","jsx-no-multi-spaces","jsx-self-closing-comp","jsx-tag-spacing","jsx-wrap-multilines"];function w(e){return!!e.configs.recommended}function L(e){let n=Object.keys(e),t=n.length,r={plugins:{},rules:{}},s,i;for(let o=0;o<t;o++)s=n[o],i=e[s],r.plugins[s]=i,w(i)&&(r.rules=Object.assign(r.rules,i.configs.recommended.rules));return r}function g(e,n){return e==="eslint"?n:`${e}/${n}`}function j(e,n){let t=e.length,r=n.length,s={},i,o;for(let l=0;l<r;l++)for(i=n[l],o=0;o<t;o++)s[g(i,e[o])]=0;return s}function S(e,n){for(let t=n.length-1;t>=0;t--)delete e.rules[n[t]]}function C(e){let n=new Map,t=e.length,r=`merged-processor:${e[0].meta?.name??"unknown"}`;for(let s=1;s<t;s++)r=`${r}+${e[s].meta?.name??"unknown"}`;return{meta:{name:r},supportsAutofix:!0,preprocess(s,i){let o=new Array(t),l=[];n.set(i,o);let a;for(let c=0;c<t;c++)a=e[c].preprocess?.(s,i)??[],o[c]=a.length,m(l,a);return l},postprocess(s,i){let o=n.get(i),l=[];n.delete(i);let a=0,c;for(let f=0;f<t;f++)c=s.slice(a,a+o[f]),a+=o[f],m(l,e[f].postprocess?.(c,i)??[]);return l}}}function R(e){return Object.hasOwn(e,"rules")||Object.hasOwn(e,"plugins")}function $(...e){let n=e.length,t=new Array(n),r;for(let s=n-1;s>=0;s--)r=e[s],t[s]=R(r)?r.rules:r;return y(...t)}function O(e,n,t){let r=e.length,s=n.length,i=t.length,o={},l,a;for(let c=0;c<r;c++){for(l=e[c],a=0;a<s;a++)o[g(n[a],l)]=0;for(a=0;a<i;a++)o[g(t[a],l)]=2}return o}var U={configs:["shiny","format","test"],prettier:!0,gitignore:!0,eslintignore:!0};async function I(e){let n=Object.assign({},U,e),[t,r,s]=await Promise.all([d(n),b(n),x()]),i=await getConfigs(n)}export{he as DeprecatedStyleList,D as EsStyleReplaceList,be as EsTsReplaceList,le as ExcludeGlobs,u as ExtensionGlob,xe as GeneralBanList,we as JsxStyleReplaceList,pe as SrcGlob,ce as StyleGlob,ye as StyleVueReplaceList,ue as TestGlobs,B as VueBanList,de as VueStyleBanList,L as apply,d as applyPrettier,j as ban,p as cwd,I as default,S as deleteRules,x as findTSConfigs,y as merge,m as mergeArr,C as mergeProcessors,$ as mergeRules,b as parseGitignore,O as replace};
//# sourceMappingURL=index.js.map
